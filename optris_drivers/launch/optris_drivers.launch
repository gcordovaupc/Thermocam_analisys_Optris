<?xml version="1.0" encoding="UTF-8"?>
<launch>
<group ns="optris">

  <node name="optris_imager_node" pkg="optris_drivers" type="optris_imager_node" output="screen">
    <!-- Set configuration file of your camera here! -->  
    <param name="xmlConfig"      type="string" value="$(find optris_drivers)/config/15040011.xml"/>  
  </node>
  
  <node name="optris_colorconvert_node" pkg="optris_drivers" type="optris_colorconvert_node" output="screen">
    <param name="palette"            type="int"    value="6"/>                              <!-- see ImageBuilder.h for valid values: http://documentation.evocortex.com/libirimager2/html/ImageBuilder_8h_source.html -->
    <param name="paletteScaling"     type="int"    value="2"/>                              <!-- scaling method for color conversion, see ImageBuilder.h -->
    <param name="temperatureMin"     type="double" value="20"/>                             <!-- set minimum temperature for fixed scaling -->
    <param name="temperatureMax"     type="double" value="40"/>                             <!-- set maximum temperature for fixed scaling -->
    <param name="looprate"           type="double" value="30"/>                             <!-- set frame rate to publish images -->
    <param name="camera_name"        type="string" value="optris_imager"/>        <!-- set camera name -->
    <param name="camera_info_url"    type="string" value="file://$(optenv ROS_HOME /tmp/.ros)/camera_info/optris_imager.yaml"/> <!-- set camera_info_url containing camera calibration -->
    <!-- Uncomment the following line, if you want to use PNG compression. Use rosrun dynamic_reconfigure reconfigure_gui to pick PNG format --> 
    <!-- <param name="image_transport" type="string" value="compressed"/> -->
  </node>
 
  <!--  
   <node name="optris_binary_image_node" pkg="optris_drivers" type="optris_binary_image_node">  </node>
  -->

  <!-- start image_proc to remove lens distortion from the IR-image. The undistorted image is advertised under topic "/optris/image_rect_color" -->
  <node name="image_proc" pkg="image_proc" type="image_proc"/>
  
</group>
</launch>
